import telebot
import config
from telebot import types as t
import bd_students as bd

API_TOKEN = config.token()
bot = telebot.TeleBot(API_TOKEN)


def get_data(message):
    bd.temp_students.append(message.text)
    print(bd.temp_students)
    bot.send_message(message.chat.id, "–ó–∞–ø–∏—Å—å " + message.text + " –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    if len(bd.temp_students) == 7:
        in_markup = t.InlineKeyboardMarkup(row_width=1)
        btn_write_bd = t.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ", callback_data='–ó–∞–ø–∏—Å—å')
        in_markup.row(btn_write_bd)
        bot.send_message(
            message.chat.id, '–ù–∞–∂–º–∏—Ç–µ', reply_markup=in_markup)

    if len(bd.name_id) == 1 and len(bd.temp_students) == 1:
        print(bd.name_id[0])
        print(bd.temp_students[0])
        in_markup = t.InlineKeyboardMarkup(row_width=1)
        btn_write_bd = t.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —É—á–µ–Ω–∏–∫–∞", callback_data='–û–±–Ω–æ–≤–∏—Ç—å')
        in_markup.row(btn_write_bd)
        bot.send_message(
            message.chat.id, '–ù–∞–∂–º–∏—Ç–µ', reply_markup=in_markup)
    else:
        markup = t.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True)
        btn_next = t.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —É—á–µ–Ω–∏–∫–∞")
        markup.add (btn_next)
        bot.send_message(message.chat.id, '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:', reply_markup=markup)

def get_id(message):
    bd.name_id.append(message.text)
    print(bd.name_id)
    if len(bd.name_id) == 1:
        markup = t.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True)
        btn_class = t.KeyboardButton('–ö–ª–∞—Å—Å')
        markup.add(btn_class)
        bot.send_message(
        message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ö–ª–∞—Å—Å', reply_markup=markup)
    if len(bd.name_id) == 1 and len(bd.temp_students) == 1:
        in_markup = t.InlineKeyboardMarkup(row_width=1)
        btn_write_bd = t.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —É—á–µ–Ω–∏–∫–∞", callback_data='–û–±–Ω–æ–≤–∏—Ç—å')
        in_markup.row(btn_write_bd)
        bot.send_message(
            message.chat.id, '–ù–∞–∂–º–∏—Ç–µ', reply_markup=in_markup)



@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç {0.first_name}!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –ò–Ω—Ñ–æ-–±–æ—Ç ‚úåÔ∏è\n–ù–∞–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /help –∏ —è –ø–æ–∫–∞–∂—É, —á—Ç–æ —è —É–º–µ—é.".format(
            message.from_user, bot.get_me()))


@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, "–Ø —É–º–µ—é –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã:\n/func")

@bot.message_handler(commands=['func'])
def choise_func(message):
    markup = t.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True)
    btn_show_bd = t.KeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã —É—á–µ–Ω–∏–∫–æ–≤") #–ì–æ—Ç–æ–≤–æ
    btn_add_st = t.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —É—á–µ–Ω–∏–∫–∞") #–ì–æ—Ç–æ–≤–æ
    btn_find_st = t.KeyboardButton("–ü–æ–∏—Å–∫") #–ì–æ—Ç–æ–≤–æ
    btn_change_data = t.KeyboardButton("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
    btn_del_data = t.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
    markup.add (btn_show_bd, btn_add_st,  btn_find_st, btn_change_data, btn_del_data)
    bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def menu_choice(message):

    if message.chat.type == 'private':
        if message.text == "–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã —É—á–µ–Ω–∏–∫–æ–≤":
            bot.send_message(message.chat.id, str(bd.get_all_student()))
        elif message.text == "–î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —É—á–µ–Ω–∏–∫–∞":
            markup = t.ReplyKeyboardMarkup(
            resize_keyboard=True, one_time_keyboard=True)
            btn_first_name = t.KeyboardButton('–§–∞–º–∏–ª–∏—è')
            btn_name = t.KeyboardButton('–ò–º—è')
            btn_second_name = t.KeyboardButton('–û—Ç—á–µ—Å—Ç–≤–æ')
            btn_class = t.KeyboardButton('–ö–ª–∞—Å—Å')
            btn_grade = t.KeyboardButton('–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å')
            btn_birthday = t.KeyboardButton('–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è')
            btn_phone = t.KeyboardButton('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
            markup.add(btn_first_name, btn_name, btn_second_name, btn_class, 
            btn_grade,btn_birthday, btn_phone )
            bot.send_message(
                message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ', reply_markup=markup)
        elif message.text == '–§–∞–º–∏–ª–∏—è':
            msg = bot.send_message(message.from_user.id, '–í–≤–æ–¥:')
            bot.register_next_step_handler(msg, get_data)
        elif message.text == '–ò–º—è':
            msg = bot.send_message(message.from_user.id, '–í–≤–æ–¥:')
            bot.register_next_step_handler(msg, get_data)
        elif message.text == '–û—Ç—á–µ—Å—Ç–≤–æ':
            msg = bot.send_message(message.from_user.id, '–í–≤–æ–¥:')
            bot.register_next_step_handler(msg, get_data)
        elif message.text == '–ö–ª–∞—Å—Å':
            msg = bot.send_message(message.from_user.id, '–í–≤–æ–¥:')
            bot.register_next_step_handler(msg, get_data)
        elif message.text == '–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å':
            msg = bot.send_message(message.from_user.id, '–í–≤–æ–¥:')
            bot.register_next_step_handler(msg, get_data)
        elif message.text == '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è':
            msg = bot.send_message(message.from_user.id, '–í–≤–æ–¥:')
            bot.register_next_step_handler(msg, get_data)
        elif message.text == '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞':
            msg = bot.send_message(message.from_user.id, '–í–≤–æ–¥:')
            bot.register_next_step_handler(msg, get_data)
        elif message.text == "–î–∞–ª–µ–µ":
            msg = bot.send_message(message.from_user.id, "–î–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞")
        elif message.text == '–ü–æ–∏—Å–∫':
            in_markup = t.InlineKeyboardMarkup(row_width=3)
            btn_find_first_name = t.InlineKeyboardButton(text="–§–∞–º–∏–ª–∏–∏", callback_data='find_first_name')
            btn_find_name = t.InlineKeyboardButton(text="–ò–º–µ–Ω–∞", callback_data='find_name')
            btn_find_second_name = t.InlineKeyboardButton(text="–û—Ç—á–µ—Å—Ç–≤–∞", callback_data='find_second_name')
            btn_find_class = t.InlineKeyboardButton(text="–ö–ª–∞—Å—Å—ã", callback_data='find_class')
            btn_find_grade = t.InlineKeyboardButton(text="–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞", callback_data='find_grade')
            btn_find_birthday = t.InlineKeyboardButton(text="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", callback_data='find_birthday')
            btn_find_phone = t.InlineKeyboardButton(text="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data='find_phone')
            in_markup.row(btn_find_first_name, btn_find_name, btn_find_second_name)
            in_markup.row(btn_find_class, btn_find_grade, btn_find_birthday)
            in_markup.row(btn_find_phone)
            bot.send_message(message.chat.id, '–ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö:', reply_markup=in_markup)
        elif message.text == "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö":
            in_markup = t.InlineKeyboardMarkup(row_width=3)
            btn_change_class = t.InlineKeyboardButton(text="–ö–ª–∞—Å—Å", callback_data='change_class')
            btn_change_grade = t.InlineKeyboardButton(text="–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞", callback_data='change_grade')
            btn_change_phone = t.InlineKeyboardButton(text="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data='change_phone')
            in_markup.row(btn_change_class, btn_change_grade, btn_change_phone)
            bot.send_message(message.chat.id, '–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ:', reply_markup=in_markup)
        elif message.text == "–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
            bot.send_message(message.chat.id, '–û–±—Ä–∞—â–∞–π—Å—è –µ—â—ë, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ')
        elif message.text == 'ID —É—á–µ–Ω–∏–∫–∞':
            msg = bot.send_message(message.from_user.id, '–í–≤–æ–¥:')
            bot.register_next_step_handler(msg, get_id)
        
     

@bot.callback_query_handler(func=lambda call: True)
def callbackInline(call):
    if call.message:
        if call.data == '–ó–∞–ø–∏—Å—å':
            bd.add_first_name()
            bot.send_message(call.message.chat.id,
            '–ó–∞–ø–∏—Å—å –≤ –ë–î –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!üëçüëè')
        if call.data == 'find_first_name':
            bot.send_message(call.message.chat.id,
            "–°–ø–∏—Å–æ–∫ —Ñ–∞–º–∏–ª–∏–π:\n" + str(bd.get_first_name()))
        if call.data == 'find_name':
            bot.send_message(call.message.chat.id,
            "–°–ø–∏—Å–æ–∫ –∏–º—ë–Ω:\n" + str(bd.get_second_name()))
        if call.data == 'find_second_name':
            bot.send_message(call.message.chat.id,
            "–°–ø–∏—Å–æ–∫ –æ—Ç—á–µ—Å—Ç–≤:\n" + str(bd.get_last_name()))
        if call.data == 'find_class':
            bot.send_message(call.message.chat.id,
            "–°–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤:\n" + str(bd.get_class_num()))
        if call.data == 'find_grade':
            bot.send_message(call.message.chat.id,
            "–°–ø–∏—Å–æ–∫ —Å—Ä–µ–¥–Ω–∏—Ö –æ—Ü–µ–Ω–æ–∫:\n" + str(bd.get_average_grade()))
        if call.data == 'find_birthday':
            bot.send_message(call.message.chat.id,
            "–°–ø–∏—Å–æ–∫ –¥–∞—Ç —Ä–æ–∂–¥–µ–Ω–∏–π:\n" + str(bd.get_date_of_birthday()))
        if call.data == 'find_phone':
            bot.send_message(call.message.chat.id,
            "–°–ø–∏—Å–æ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:\n" + str(bd.get_phone_number()))
        if call.data == 'change_class':
            markup = t.ReplyKeyboardMarkup(
            resize_keyboard=True, one_time_keyboard=True)
            btn_id_stud = t.KeyboardButton('ID —É—á–µ–Ω–∏–∫–∞')
            markup.add(btn_id_stud)
            bot.send_message(call.message.chat.id, '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥', reply_markup=markup)
        if call.data == 'change_grade':
            bot.send_message(call.message.chat.id,
            "–°–ø–∏—Å–æ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:\n" + str(bd.get_phone_number()))
        if call.data == 'change_phone':
            bot.send_message(call.message.chat.id,
            "–°–ø–∏—Å–æ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:\n" + str(bd.get_phone_number()))
        if call.data == '–û–±–Ω–æ–≤–∏—Ç—å':
            bd.change_class()
            bot.send_message(call.message.chat.id,
            '–ó–∞–ø–∏—Å—å –≤ –ë–î –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!üëçüëè')

        
            


bot.polling(none_stop=True)
