import telebot
import log
import config
import random
from telebot import types as t
import rational as r


API_TOKEN = config.token()
bot = telebot.TeleBot(API_TOKEN)


start_game = False
calc = False
winner = False
losser = False
game_feald = [" ", " ", " ",
              " ", " ", " ",
              " ", " ", " ", ]


def clear_feald():
    global game_feald
    game_feald = [" ", " ", " ",
                  " ", " ", " ",
                  " ", " ", " ", ]


def win(cell_1, cell_2, cell_3):
    if cell_1 == player_move and cell_2 == player_move and cell_3 == player_move:
        global winner
        winner = True


def get_rational(message):
    global result
    result = r.imput_text(message.text)
    log.logger(message.text, result)
    bot.send_message(message.chat.id, message.text + " = " + str(result))
    markup = t.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True)
    btn_yes = t.KeyboardButton("–î–∞")
    btn_no = t.KeyboardButton("–ù–µ—Ç")
    markup.add(btn_yes, btn_no)
    bot.send_message(
        message.chat.id, '–ú–æ–≥—É –ª–∏ —è –µ—â—ë —á–µ–º –ø–æ–º–æ—á—å?', reply_markup=markup)

def get_komplex(message):
    global result
    j = (-1)**(1/2)
    result = eval(message.text)
    log.logger(message.text, result)
    bot.send_message(message.chat.id, message.text + " = " + str(result))
    markup = t.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True)
    btn_yes = t.KeyboardButton("–î–∞")
    btn_no = t.KeyboardButton("–ù–µ—Ç")
    markup.add(btn_yes, btn_no)
    bot.send_message(
        message.chat.id, '–ú–æ–≥—É –ª–∏ —è –µ—â—ë —á–µ–º –ø–æ–º–æ—á—å?', reply_markup=markup)


@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç {0.first_name}!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –ë–æ—Ç-–í–∞–ª–µ—Ä–∞ ‚úåÔ∏è\n–ù–∞–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /help –∏ —è –ø–æ–∫–∞–∂—É, —á—Ç–æ —è —É–º–µ—é.".format(
            message.from_user, bot.get_me()))
    log.logger_start()


@bot.message_handler(commands=['help'])
def help_message(message):
    log.logger_btn(message.text)
    bot.send_message(message.chat.id, "–Ø —É–º–µ—é –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã:\n/func")


@bot.message_handler(commands=['func'])
def choise_func(message):
    log.logger_btn(message.text)
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: 1 - –º–µ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏, 2 - —Å–∫—Ä—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    markup = t.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True)
    btn_calc = t.KeyboardButton('–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä')
    btn_cross_null = t.KeyboardButton('–ò–≥—Ä–∞ "–ö—Ä–µ—Å—Ç–∏–∫–∏-–ù–æ–ª–∏–∫–∏"')
    btn_log = t.KeyboardButton('–î–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    markup.add(btn_calc, btn_cross_null, btn_log)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def menu_choice(message):

    if message.chat.type == 'private':
        global feald
        global bot_move
        global player_move
        global start_game
        if message.text == '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
            log.logger_btn(message.text)
            global markup
            markup = t.ReplyKeyboardMarkup(
                resize_keyboard=True, one_time_keyboard=True)
            btn_example = t.KeyboardButton(
                '–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ãe —á–∏—Å–ª–∞')
            btn_rational = t.KeyboardButton(
                '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ãe —á–∏—Å–ª–∞')
            markup.add(btn_example, btn_rational)
            bot.send_message(
                message.chat.id, '–†–µ–∂–∏–º –∫–∞–ª—å–∫—É—Ç—è—Ç–æ—Ä–∞ –≤–∫–ª—é—á–µ–Ω!', reply_markup=markup)
        elif message.text == '–ò–≥—Ä–∞ "–ö—Ä–µ—Å—Ç–∏–∫–∏-–ù–æ–ª–∏–∫–∏"':
            log.logger_btn(message.text)
            start_game = True
            markup = t.ReplyKeyboardMarkup(
                resize_keyboard=True, one_time_keyboard=True)
            btn_cross = t.KeyboardButton('–ò–≥—Ä–∞—Ç—å ‚ùå')
            btn_null = t.KeyboardButton('–ò–≥—Ä–∞—Ç—å ‚≠ï')
            markup.add(btn_cross, btn_null)
            bot.send_message(
                message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ—Ä–æ–Ω—É:', reply_markup=markup)
        elif message.text == '–ò–≥—Ä–∞—Ç—å ‚ùå':
            player_move = '‚ùå'
            bot_move = '‚≠ï'
            feald = {}
            markup = t.InlineKeyboardMarkup(row_width=3)
            for i in range(9):
                feald[i] = t.InlineKeyboardButton(
                    game_feald[i], callback_data=str(i))
            markup.row(feald[0], feald[1], feald[2])
            markup.row(feald[3], feald[4], feald[5])
            markup.row(feald[6], feald[7], feald[8])
            bot.send_message(
                message.chat.id, '–ù–∞–∂–º–∏ –Ω–∞ –ø—É—Å—Ç—É—é –∫–ª–µ—Ç–∫—É', reply_markup=markup)
        elif message.text == '–ò–≥—Ä–∞—Ç—å ‚≠ï':
            player_move = '‚≠ï'
            bot_move = '‚ùå'
            feald = {}
            markup = t.InlineKeyboardMarkup(row_width=3)
            for i in range(9):
                feald[i] = t.InlineKeyboardButton(
                    game_feald[i], callback_data=str(i))
            markup.row(feald[0], feald[1], feald[2])
            markup.row(feald[3], feald[4], feald[5])
            markup.row(feald[6], feald[7], feald[8])
            bot.send_message(
                message.chat.id, '–ù–∞–∂–º–∏ –Ω–∞ –ø—É—Å—Ç—É—é –∫–ª–µ—Ç–∫—É', reply_markup=markup)
        elif message.text == '–î–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
            log.logger_btn(message.text)
            logs = open('logs.txt', 'rb')
            bot.send_document(message.chat.id, logs)
        elif message.text == '–î–∞':
            log.logger_btn(message.text)
            bot.send_message(message.chat.id, "–ù–∞–∂–º–∏:\n/func")
        elif message.text == '–ù–µ—Ç':
            log.logger_btn(message.text)
            log.logger_exit()
            bot.send_message(message.chat.id, '–û–±—Ä–∞—â–∞–π—Å—è –µ—â—ë, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ')
        elif message.text == '–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ãe —á–∏—Å–ª–∞':
            log.logger_btn(message.text)
            msg = bot.send_message(message.from_user.id, '–ü—Ä–∏–º–µ—Ä:')
            bot.register_next_step_handler(msg, get_rational)
        elif message.text == '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ãe —á–∏—Å–ª–∞':
            log.logger_btn(message.text)
            msg = bot.send_message(message.from_user.id, '–ü—Ä–∏–º–µ—Ä:')
            bot.register_next_step_handler(msg, get_komplex)


@bot.callback_query_handler(func=lambda call: True)
def callbackInline(call):
    global start_game
    global winner
    global markup
    global game_feald
    global bot_move
    global player_move
    if (call.message):
        for i in range(9):
            if call.data == str(i):
                if game_feald[i] == ' ':
                    game_feald[i] = player_move
                    bot.send_message(call.message.chat.id, '–ò–≥—Ä–æ–∫ —Å–¥–µ–ª–∞–ª —Ö–æ–¥!')
                    feald[i] = t.InlineKeyboardButton(
                        game_feald[i], callback_data=str(i))
                    markup.row(feald[0], feald[1], feald[2])
                    markup.row(feald[3], feald[4], feald[5])
                    markup.row(feald[6], feald[7], feald[8])
                    random_num = random.randint(0, 8)
                    if game_feald[random_num] == player_move:
                        random_num = random.randint(0, 8)
                    if game_feald[random_num] == bot_move:
                        random_num = random.randint(0, 8)
                    if game_feald[random_num] == ' ':
                        game_feald[random_num] = bot_move
                    markup = t.InlineKeyboardMarkup(row_width=3)
                    feald[i] = t.InlineKeyboardButton(
                        game_feald[i], callback_data=str(i))
                    markup.row(feald[0], feald[1], feald[2])
                    markup.row(feald[3], feald[4], feald[5])
                    markup.row(feald[6], feald[7], feald[8])
                    bot.send_message(call.message.chat.id,
                                     '–ü–æ–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ', reply_markup=markup)
                    for i in range(9):
                        markup = t.InlineKeyboardMarkup(row_width=3)
                        feald[i] = t.InlineKeyboardButton(
                            game_feald[i], callback_data=str(i))
                    markup.row(feald[0], feald[1], feald[2])
                    markup.row(feald[3], feald[4], feald[5])
                    markup.row(feald[6], feald[7], feald[8])
                    win(game_feald[0], game_feald[1], game_feald[2])
                    win(game_feald[3], game_feald[4], game_feald[5])
                    win(game_feald[6], game_feald[7], game_feald[8])
                    win(game_feald[0], game_feald[3], game_feald[6])
                    win(game_feald[1], game_feald[4], game_feald[7])
                    win(game_feald[2], game_feald[5], game_feald[8])
                    win(game_feald[0], game_feald[4], game_feald[8])
                    win(game_feald[2], game_feald[4], game_feald[6])
                    if winner:
                        clear_feald()
                        bot.send_message(call.message.chat.id,
                                         '–Ø –ø—Ä–æ–∏–≥—Ä–∞–ª, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è üëçüëè')
                        winner = False
                        start_game = False
                        markup = t.ReplyKeyboardMarkup(
                            resize_keyboard=True, one_time_keyboard=True)
                        btn_yes = t.KeyboardButton('–î–∞')
                        btn_no = t.KeyboardButton('–ù–µ—Ç')
                        markup.add(btn_yes, btn_no)
                        bot.send_message(call.message.chat.id,
                                         '–ï—â—ë –ø–æ–∏–≥—Ä–∞–µ–º? üòÇ', reply_markup=markup)
                    else:
                        bot.send_message(call.message.chat.id,
                                         '–í—ã–±–µ—Ä–∏ –∫–ª–µ—Ç–∫—É', reply_markup=markup)
                else:
                    bot.send_message(call.message.chat.id,
                                     '–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –∫–ª—É—Ç–∫—É, –∫–ª–µ—Ç–∫–∞ –∑–∞–Ω—è—Ç–∞')


bot.polling(none_stop=True)
